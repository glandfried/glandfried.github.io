[{"authors":["admin"],"categories":null,"content":" Empirical knowledge emerges as life does I am a social anthropologist finishing a PhD in computer science working on Bayesian inference, social learning and cultural evolution. The best thing I discovered through this interdisciplinary approach was the existence of a method that guarantees intersubjective agreements in contexts of uncertainty, its isomorphism with evolutionary theory, and the real advantage that cooperation and coexistence have in both systems.\nAfter finishing my licentiate degree (BSc + MSc) in anthropology, I decided to acquire a solid background in mathematics and computer science with the aim of using them as tools for the social sciences. In one of the top scientific institutes of Latin America, I have opened the main line of research in social sciences and Bayesian inference under the supervision of the directors of the Artificial Intelligence Lab (Diego Slezak) and High Performance Computing Lab (Esteban Mocskos). There I had the opportunity to work side by side with computer scientists, applied mathematicians, physicists, biologists, and neuroscientists, and to be evaluated under the standards of their own disciplines. I also worked as a graduate teaching assistant at the Department of Computer Sciences and supervised master\u0026rsquo;s theses in computer science, anthropology, and physics.\nThe PhD was originally oriented towards the study of cultural evolution in online games, but ended up acquiring a deeply Bayesian approach. To estimate the adaptability of individuals over time I found myself forced to implement the state-of-the-art skill model in the video game industry, TrueSkill Through Time (TTT), creating the first packages available until now in Julia, Python and R. Unlike the classic models (Elo, Glicko, TrueSkill, IRT), the TTT model propagates all historical information throughout a single Bayesian network, providing reliable initial skill estimates and guaranteeing historical comparability. An efficient algorithm allows millions of observations to be analyzed using few computational resources.\nWe focused on online games with the aim of studying the effects of social factors over individual learning. Unlike the formal sciences, which validate their propositions within closed axiomatic systems, the empirical sciences must validate them within open systems that always contain a certain degree of uncertainty. If we are always in doubt, how can we reach \u0026ldquo;empirical truths\u0026rdquo;? The strict application of probability theory (aka Bayesian inference) has proven to be not only the most successful approach in contexts of uncertainty. From an epistemological perspective, Bayesian inference also guarantees intersubjective agreements given the empirical and formal evidence (data and causal models), foundation of empirical truths.\nBoth evolutionary and probabilistic selection processes are multiplicative in nature. In evolutionary theory everyone is taught that lineage growth is a multiplicative and noisy process: a cumulative product of survival and reproductive rates. In probability theory hypotheses are selected through the product rule: a cumulative product of prior predictions of the observed data. Because in multiplicative processes the impacts of losses are usually stronger than those of gains (e.g. a single zero is enough to generate an extinction) there is an advantage in favor of variants that reduce fluctuations: diversification (epistemic property), cooperation (major evolutionary property), specialization (meta-epistemic property), coexistence (ecological property).\nThe attributes that allow humans to create complex cultures developed due to a genetic-cultural co-evolution triggered by the earlier emergence of cooperative breeding. The development of mutual understanding made knowledge a common resource that is transmitted and accumulated across generations. The reduction of fluctuations through cooperation produced an increase in their growth rate, causing a cultural transition. Before it, we were in serious danger of extinction, as evidenced by the low diversity of the human genome. After it, our species managed to occupy all the ecological niches of the earth, as no other terrestrial vertebrate had ever done before.\nCoexistence with other species is the only possible strategy for a heterotrophic species like ours. The experience accumulated over the generations by people all over the world independently led to the development of reciprocity technologies, local community institutions capable of ensuring long-term social and ecological coexistence. In particular, probability theory was born in 1654 in search of the fair value of reciprocity: there is a price that guarantees coexistence in contexts of uncertainty. Despite all the advances of modernity, the concomitant colonial conquest produced a massive loss of cultural knowledge that led to the current massive loss of biodiversity, which metropolitan science seems unable to reverse.\nBecause cultural and scientific knowledge are common resources, we are not forced to reduce fluctuations individually so an advantage in favor of specialization emerges: it is better to bet all on the best option even though the majority may fail individually. Although the incentives of academic institutions transform the scientific activity, which is by nature cooperative, into an individual game, I will continue to bet all my resources on an empirical science based on intersubjective agreements. Ultimately, true empirical knowledge is held by plants and the worldviews of indigenous communities capable of believing at the same time in mutually contradictory ideas just as Bayesian inference does.\n","date":1614470400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1614470400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://glandfried.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Empirical knowledge emerges as life does I am a social anthropologist finishing a PhD in computer science working on Bayesian inference, social learning and cultural evolution. The best thing I discovered through this interdisciplinary approach was the existence of a method that guarantees intersubjective agreements in contexts of uncertainty, its isomorphism with evolutionary theory, and the real advantage that cooperation and coexistence have in both systems.\nAfter finishing my licentiate degree (BSc + MSc) in anthropology, I decided to acquire a solid background in mathematics and computer science with the aim of using them as tools for the social sciences.","tags":null,"title":"Gustavo Landfried","type":"authors"},{"authors":["mocskos"],"categories":null,"content":"\n","date":1614470400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1614470400,"objectID":"7bb594d4a6853e76f6eb271566f619e6","permalink":"https://glandfried.github.io/authors/mocskos/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/mocskos/","section":"authors","summary":"","tags":null,"title":"Esteban Mocskos","type":"authors"},{"authors":["slezak"],"categories":null,"content":"\n","date":1551398400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1551398400,"objectID":"87361c8736f5db02ab9f3f6df73f5555","permalink":"https://glandfried.github.io/authors/slezak/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/slezak/","section":"authors","summary":"","tags":null,"title":"Diego Fernandez Slezak","type":"authors"},{"authors":["Gustavo Landfried","Esteban Mocskos"],"categories":null,"content":" Most estimators implemented for the video game industry cannot obtain reliable initial estimates nor guarantee comparability between distant estimates. TrueSkill Through Time solves all these problems by modeling the entire history of activities using a single Bayesian network. This algorithm requires a few iterations to converge, allowing millions of observations to be analyzed using any low-end computer.\nTo support the use of reliable learning estimators, we provide the first implementations of TrueSkill Through Time for Julia, Python and R. A complete scientific documentation allows scientists to make sense of all epistemological and technical aspects of the estimation process.\nScientific article You can find the full scientific documentation of TrueSkill Through Time packages at:\n English. Last version 2021-07-26 Español. Última versión 2021-07-26  Packages  Julia Package: https://github.com/glandfried/TrueSkillThroughTime.jl Python Package: https://github.com/glandfried/TrueSkillThroughTime.py R package: https://github.com/glandfried/TrueSkillThroughTime.R  Computational details Our Python package solves individual events ten times faster than the original trueskill 0.4.5 (Lee 2012) package. In turn, our Julia package converge a history of events ten times faster than our Python package. In contrast, our R package is slower than the other packages, including the original trueskill 0.4.5 package.\nThe History of the ATP The following figure presents the learning curves of some famous players in ATP history. A one-point difference between skills is equivalent to 76% probability of winning. The top bar indicates which player was at the top of the ATP’s ranking.\nIt is possible recognize the periods of crisis, stability and success of the players, even the effect of emotional slumps such as those that Aggasi and Djockovic had. The skill of tennis players did not increase so much over the years: on the contrary the players of the 1980s were more skilled than those of the 1990s, and reached a skill similar to what Federer, Nadal and Djokovic had in 2020.\nThere is a relative coincidence between skill and who is at any given moment at the top of the ATP rankings. However, TrueSkill Through Time allows comparing the relative ability of players over time: the 10th player in the historical ATP\u0026rsquo;s ranking, Hewitt, is a product of the window of opportunity that was opened in the year 2000; and the 4th most skilled player, Murray, is ranked 14th just above Nastase.\nThe models commonly used in industry and academia (TrueSkill, Glicko, Item-Response Theory) are based on an ad-hoc solution that prevents them both from having good initial estimates and from guaranteeing comparability between estimates separated in time.\nThe advantage of TrueSkill Through Time lies in its temporal causal model, that links all historical activities in the same Bayesian network, which guarantees both good initial estimates and the temporal and spatial comparability of the estimates.\nAcknowledgments Special thanks to Heungsub Lee for having published the basic TrueSkill model in Python.\n","date":1614470400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1614470400,"objectID":"a819767b443c65ba7a3ae1a147dde2db","permalink":"https://glandfried.github.io/publication/landfried2021-learning/","publishdate":"2021-02-28T00:00:00Z","relpermalink":"/publication/landfried2021-learning/","section":"publication","summary":"Most estimators implemented for the video game industry cannot obtain reliable initial estimates nor guarantee comparability between distant estimates. TrueSkill Through Time solves all these problems by modeling the entire history of activities using a single Bayesian network. This algorithm requires a few iterations to converge, allowing millions of observations to be analyzed using any low-end computer.\nTo support the use of reliable learning estimators, we provide the first implementations of TrueSkill Through Time for Julia, Python and R.","tags":null,"title":"TrueSkill Through Time. The full scientific documentation","type":"publication"},{"authors":["Gustavo Landfried"],"categories":[],"content":" The reciprocal coexistence of diversities The current massive loss of biodiversity was preceded by a massive loss of cultural diversity. Despite all the advances, metropolitan science was not able to compensate for the loss of millenarian knowledge caused by colonial-modernity. Evolution, like Bayesian inference, needs diversity to function properly. Long-term coexistence with ecological systems implies recovering the reciprocal coexistence between autonomous indigenous communities. Because, in short, empirical knowledge is life.\nIn the last third of the history of the Universe, a form of organization of matter capable of self-replication appeared on Earth. The growth of these lineages followed multiplicative and noisy processes: a sequence of survival and reproductive probabilities. In it, the impacts of losses are often stronger than those of gains, if there is even one zero in the sequence, we are extinct. Because variance reduction is really important, cooperation has a fundamental evolutionary advantage. This caused life to acquire an extraordinary complexity throughout its history.\nThe skills that allow us to create complex cultures developed due to the prior emergence of cooperative breeding, which produced an environment that favored the selection of offspring with special capacities for mutual understanding. The ability to transmit knowledge from generation to generation produced radical consequences for our species. Before the cultural transition, we were in serious danger of extinction, as evidenced by the low diversity of the human genome. After the cultural transition, our species was able to occupy all the ecological niches of the earth, as no other terrestrial vertebrate had ever done before.\nScience is a human institution that aims to formulate universally valid propositions, both interculturally and intersubjectively. Formal sciences validate them by means of theorems, results derived from the internal rules of a closed axiomatic system. Empirical sciences, in contrast, must validate them within open systems, which always involve a degree of uncertainty. Probability theory is by far the most widely used approach to represent uncertainty, and it is already remarkable that it has been derived from a large number of different axiomatic systems.\nProbability theory only has two rules. The sum rule imposes a cooperative pact among the hypotheses of the same model: predictions are made with the contribution of all of them. The product rule is the multiplicative process by which hypotheses (and models) are selected, the same process by which evolution selects among different strategies, the reason why cooperation has an evolutionary advantage. Together, they update beliefs by maximizing uncertainty given empirical (data) and formal (causal models) information, which guarantees the validity of empirical knowledge. Why?\nThe \u0026ldquo;principle of indifference\u0026rdquo; is the cornerstone of the empirical sciences, an epistemological criterion of intercultural validity, present in all the peoples of the planet. We will all agree that, in the absence of prior information, the only correct way to distribute belief among a (finit) set of hypotheses is in equal parts (details at Honest Beliefs). Then, the only universally valid propositions for empirical science are those that maximize diversity (i.e. uncertainty).\nThe advantage of cooperation is not principled, it is pragmatic. Due to the multiplicative nature of the selection processes, both evolutionary and probabilistic, the breakdown of the cooperative pact negatively affects those who promote it without the need to introduce punishments. The overfitting problem associated with frequentist techniques is a direct consequence of selecting a single hypothesis. The problem of ecological crisis associated with colonial-modern society is a direct consequence of imposing a single type of society.\nThe solution to the ecological crisis (and overfitting) consists in recovering the coexistence between the various forms of life (or hypotheses). Evolution is Bayesian inference for the real world, and for it to work properly, diversity is required. Ultimately, empirical knowledge is life.\n","date":1612915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612915200,"objectID":"0d3711c953d4ece5ba8276087e5384ac","permalink":"https://glandfried.github.io/post/empiricalknowledge/","publishdate":"2021-02-10T00:00:00Z","relpermalink":"/post/empiricalknowledge/","section":"post","summary":"The reciprocal coexistence of diversities","tags":[],"title":"Empirical knowledge is life","type":"post"},{"authors":["Gustavo Landfried"],"categories":[],"content":" Science is a human institution that aspires to reach the truth, formulating universally valid propositions. Formal sciences validate their propositions by means of theorems, derived from applying the internal rules of a closed axiomatic system. Empirical sciences must validate their propositions within open systems, which always impose a degree of uncertainty. Which is therefore the source of validity for empirical knowledge?\nMy people say that \u0026ldquo;the only truth is reality\u0026rdquo;, and if someone wants to explain you economics and you don\u0026rsquo;t understand then they are lying to you. What we call empirical science is neither truth nor reality, it is merely a discourse about reality that claims the status of truth. The best we can do is to work honestly to reach intersubjective agreements that can be accepted by all members of our and any other community.\nSuppose we have 3 boxes and we know that behind one of them there is a gift. One possible belief distribution is:\nwhich represents a relative preference for the middle box. But if we really don\u0026rsquo;t have any information regarding where the gift is, there is no reason to have a preference for any of the options, which will undoubtedly make us agree with the following belief distribution.\nThis type of belief distributions, which allow intersubjective agreement, we will call it honest belief. Honest beliefs are the ones that maximize uncertainty, remaining consistent with the available information. In this case, having no prior information, we just divide the belief equally. This is an old principle known as \u0026ldquo;indifference\u0026rdquo;. But how do we update beliefs honestly when we receive new information?\nHere we receive the data that the gift is not in the middle box, which allows us to assign belief 0 to it. However, to update the belief of the rest of the boxes we need to interpret what the hint is telling us. Suppose the clue depends on where the gift is, it can only tell us where the gift is not. We can represent this relationship with the following causal model.\nFollowing the principle of indifference on which we relied earlier, we now divide our belief equally among the forks of the causal model paths.\nFirst we divide the belief among the possible gifts, $r$, and then we divide the belief again among the possible hints, $s$. Our joint honest belief (prior to see the data) is,\nIt is honest because it maximizes uncertainty given the information available so far: the causal model. And it is joint because it is the belief about a simultaneous occurrence of both variables, $\\text{Belief}(r,s)$.\nProbability theory The rules of probability have been derived from a large number of axiomatic systems, conceptually distinct and independent of each other, which is a strong point in their favor. But perhaps more importantly, they ensure maximization of uncertainty given empirical and formal information (data and causal models).\nProbability theory has only two rules: the sum rule and the product rule. The first one computes the belief of a single variable by integrating in equal parts the joint belief distribution. For example, the honest belief about the gifts is again 1\u0026frasl;3,\n$$\\text{Belief}(r_i) = \\sum_j \\text{Belief}(r_i, s_j) = 1\u0026frasl;3$$\nAnd the same applies to the hint variable.\n$$\\text{Belief}(s_j) = \\sum_i \\text{Belief}(r_i, s_j) = 1\u0026frasl;3$$\nThe second rule is the one that allow us to fulfill the objective we had set ourselves: update the belief about the gift after having seen the hint. It consists of preserving the joint belief that is consistent with the data, $\\text{Belief}(r_i, s_2)$.\nSince the surviving belief is now our new total belief, we normalize it (in equal parts) so that overall it adds up to 1.\n$$\\text{Belief}(r_i| s_2) = \\frac{\\text{Belief}(r_i, s_2)}{\\text{Belief}(s_2)} = 1\u0026frasl;2$$\nAfter seeing the hint, our new honest belief given the causal model is,\nThe conclusion we reached coincides with our intuition. But this result depends on the chosen causal model.\nMonty Hall Suppose the hint, not only cannot match the position of the gift, but also has a forbidden option. This relationship can be represented by the following causal model.\nThis model is better known as the Monty Hall game. To simplify the problem, we assume that box 1 is the one that remains closed, $c=1$. Suppose that in this context we receive the following hint.\nHow should we honestly update our beliefs? As we did before, we maximize uncertainty by splitting beliefs along the forks of the causal model paths.\nWhen the gift is behind box 1, $r_1$, we can receive the hint in both box 2, $s_2$, and box 3, $s_3$. If the gift is in box 2, $r_2$, the hint can only point to box 3, $s_3$. In this way we define the following joint honest belief (and its marginals).\nTo update our belief we again preserve only the belief that is compatible with the data.\nAnd then normalized so that together it adds up to 1 is\nThis answer is different from the one we obtained with the first causal model. However, Both share the property of being the belief distribution that maximizes uncertainty given the formal and empirical evidence (causal model and data), making them propositions on which we can agree both interculturally and intersubjectively..\nWe have argued that science is an intercultural project of intersubjective agreements. However, the native communities of my region remind me that the agreement must be with the whole Mother Nature, or there is simply no agreement, there is exploitation. So the truth is that (almost) everything is a lie in this world, because since the emergence of what we call \u0026ldquo;modern science\u0026rdquo; a process of irreversible loss of biodiversity has begun.\n","date":1612915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612915200,"objectID":"629a471e2a6278b1ee9646bcd28c4be8","permalink":"https://glandfried.github.io/post/honestbeliefs/","publishdate":"2021-02-10T00:00:00Z","relpermalink":"/post/honestbeliefs/","section":"post","summary":"The source of validity for empirical knowledge","tags":[],"title":"Honest Beliefs","type":"post"},{"authors":["Gustavo Landfried"],"categories":null,"content":" Packages:\n Julia Package: https://github.com/glandfried/TrueSkillThroughTime.jl Python Package: https://github.com/glandfried/TrueSkillThroughTime.py R package: https://github.com/glandfried/TrueSkillThroughTime.R  Full scientific documentation:\n English. Last version 2021-07-26 Español. Última versión 2021-07-26  TrueSkillThroughTime.jl None of the commonly used skill estimators, such as TrueSkill, Glicko and Item-Response Theory, correctly models the temporal aspect, which prevents having both good initial estimates and comparability between estimates separated in time and space.\nTrueSkill Through Time corrects those biases by modeling the entire history of activities using a single Bayesian network. The use of an efficient algorithm, that requires only a few linear iterations over the data, allows scaling to millions of observations in few seconds.\nParameters In the following code we define the variables that we will use later, assigning the default values of the packages.\nmu = 0.0; sigma = 6.0; beta = 1.0; gamma = 0.03; p_draw = 0.0  Players With these default values we create four identical players.\na1 = Player(Gaussian(mu, sigma), beta, gamma); a2 = Player(); a3 = Player(); a4 = Player()  The Gaussian class is used to model the standard operations of Gaussian distributions including multiplication, summation, division, and substraction.\nGames In the next step we create a game with two teams of two players.\nteam_a = [ a1, a2 ] team_b = [ a3, a4 ] teams = [team_a, team_b] g = Game(teams)  where the result of the game is implicitly defined by the order of the teams in the list: the teams appearing first in the list (lower index) beat those appearing later (higher index).\nDuring the initialization, the class Game computes the prior prediction of the observed result and the approximate likelihood of each player.\nlhs = g.likelihoods[1][1] ev = g.evidence ev = round(ev, digits=3) print(ev) \u0026gt; 0.5  In this case, the evidence is 0.5 indicating that both teams had the same probability of winning given the prior estimates.\nPosteriors can be found by manually multiplying the likelihoods and priors, or we can call the method posteriors() of class Game to compute them.\npos = posteriors(g) print(pos[1][1]) \u0026gt; Gaussian(mu=2.361, sigma=5.516) print(lhs[1][1] * a1.prior) \u0026gt; Gaussian(mu=2.361, sigma=5.516)  Due to the winning result, the estimate of the first player of the first now has a larger mean and a smaller uncertainty.\nWe now analyze a more complex. The players are organized in three teams of different size: two teams with only one player, and the other with two players. The result has a single winning team and a tie between the other two losing teams.\nta = [a1] tb = [a2, a3] tc = [a4] teams = [ta, tb, tc] result = [1., 0., 0.] g = Game(teams, result, p_draw=0.25)  the team with the highest score is the winner and the teams with the same score are tied. The evidence and the posteriors can be queried in the same way as before.\nSequence of Events The class History is used to compute the posteriors and evidence of a sequence of events. In the first example, we instantiate the class with three players \u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;c\u0026quot; and three games in which all agents win one game and lose the other.\nc1 = [[\u0026quot;a\u0026quot;],[\u0026quot;b\u0026quot;]] c2 = [[\u0026quot;b\u0026quot;],[\u0026quot;c\u0026quot;]] c3 = [[\u0026quot;c\u0026quot;],[\u0026quot;a\u0026quot;]] composition = [c1, c2, c3] h = History(composition, gamma=0.0)  where the variables c1, c2, and c3 model the composition of each game using the names of the agents (i.e. their identifiers), the variable composition is a list containing the three events, and the zero value of the parameter gamma specifies that skills does not change over time.\nAfter initialization, the class History immediately instantiates a new player for each name and activates the computation of the TrueSkill estimates, using the posteriors of each event as a prior for the next one.\nlc = learning_curves(h) print(lc[\u0026quot;a\u0026quot;]) \u0026gt; [(1, Gaussian(mu=3.339, sigma=4.985)), (3, Gaussian(mu=-2.688, sigma=3.779))] print(lc[\u0026quot;b\u0026quot;]) \u0026gt; [(1, Gaussian(mu=-3.339, sigma=4.985)), (2, Gaussian(mu=0.059, sigma=4.218))]  The learning curves of players \u0026quot;a\u0026quot; and \u0026quot;b\u0026quot; contain one tuple per game played (not including the initial prior): each tuple has the time of the estimate as the first component, and the estimate itself as the second one.\nAlthough in this example no player is stronger than the others, the TrueSkill estimates present strong variations between players. TrueSkill Through Time solves this problem by allowing the information to propagate throughout the system by calling the method convergence().\nconvergence(h) lc = learning_curves(h) print(lc[\u0026quot;a\u0026quot;]) \u0026gt; [(1, Gaussian(mu=0.0, sigma=2.395)), (3, Gaussian(mu=-0.0, sigma=2.395))] print(lc[\u0026quot;b\u0026quot;]) \u0026gt; [(1, Gaussian(mu=-0.0, sigma=2.395)), (3, Gaussian(mu=0.0, sigma=2.395))]  TrueSkill Through Time not only returns correct estimates (same for all players), they also have less uncertainty.\nSkill evolution This example will exhibit that TrueSkill Through Time can correctly follows the skill evolution of a new player taht joins a large community of already known players. In the following code, we generate the target player\u0026rsquo;s learning curve and 1000 random opponents.\nusing Random; Random.seed!(999); N = 1000 function skill(experience, middle, maximum, slope) return maximum/(1+exp(slope*(-experience+middle))) end target = skill.(1:N, 500, 2, 0.0075) opponents = Random.randn.(1000)*0.5 .+ target  The list target has the agent\u0026rsquo;s skills at each moment: the values start at zero and grow smoothly until the target player\u0026rsquo;s skill reaches two. The list opponents includes the randomly generated opponents\u0026rsquo; skills following a Gaussian distribution centered on each of the target\u0026rsquo;s skills and a standard deviation of 0.5.\ncomposition = [[[\u0026quot;a\u0026quot;], [string(i)]] for i in 1:N] results = [r? [1.,0.]:[0.,1.] for r in (Random.randn(N).+target.\u0026gt;Random.randn(N).+opponents)] times = [i for i in 1:N] priors = Dict{String,Player}() for i in 1:N priors[string(i)] = Player(Gaussian(opponents[i], 0.2)) end h = History(composition, results, times, priors, gamma=0.015) convergence(h) mu = [tp[2].mu for tp in learning_curves(h)[\u0026quot;a\u0026quot;]]  In this code we define four variables to instantiate the class History: the composition contains 1000 games between the target player and different opponents; the results are obtained randomly, sampling the performance of the players; the time is a list of integer ranging from 0 to 999 representing the time of each game; and priors is a dictionary used to customize player attributes (we assign low uncertainty to the opponents\u0026rsquo; priors pretending that we know their skills beforehand). The Figure shows the evolution of the true (solid line) and estimated (dotted line) learning curves of the target player.\nThe estimated learning curves remain close to the actual skill during the whole evolution.\nATP History In this last example, we analyze the complete history of the Association of Tennis Professionals (ATP) registered matches.\nThe database has 447000 games starting at year 1915 until 2020 with more than 19000 participating players and is publicly available. The file includes both single and double matches: if the column double has the letter t, the game is a double match. The file also contains players\u0026rsquo; identifiers and names: for example column w2_id is the identifier of the second player of the winning team and l1_name is the name of the first player of the losing team.\nusing CSV; using Dates data = CSV.read(\u0026quot;atp.csv\u0026quot;) dates = Dates.value.(data[:,\u0026quot;time_start\u0026quot;] .- Date(\u0026quot;1900-1-1\u0026quot;)) matches = [ r.double == \u0026quot;t\u0026quot; ? [[r.w1_id,r.w2_id],[r.l1_id,r.l2_id]] : [[r.w1_id],[r.l1_id]] for r in eachrow(data) ] h = History(composition = matches, times = dates, sigma = 1.6, gamma = 0.036) convergence(h, epsilon = 0.01, iterations = 10)  In this code we open the file atp.csv, create the variables dates and matches, and instantiate the class History. The following figure presents the learning curves of some famous players in ATP history.\nThose who know the history of tennis will be able to recognize the periods of crisis, stability and success of the players.\nThere is a relative coincidence between skill and who is at any given moment at the top of the ATP rankings, it is possible to observe the effects of injuries, and even the effect of emotional slumps such as those that Aggasi and Djockovic had.\nIt is interesting to see that the skill of tennis players did not increase so much over the years: on the contrary the players of the 1980s were more skilled than those of the 1990s, and reached a skill similar to what Federer, Nadal and Djokovic had in 2020.\nThere are also some differences between players\u0026rsquo; skills and the ATP ranking, especially with respect to the historical ranking (based on the total number of weeks at the top of the ranking): the 10th-ranked player, Hewitt, actually has relatively low skill; and the fourth most skilled player, Murray, is ranked 14th, just one place above Nastase.\nTrueSkill Through Time, unlike ATP ranking and estimators based on the filtering approach (such as TrueSkill, Glicko and IRT) allows comparing the relative ability of players over time.\nMulti-dimensional skills In the ATP example we summarize the players\u0026rsquo; skills in a single dimension. We know, however, that the ability of tennis players can vary significantly depending on the type of ground.\nTrueSkill Through Time allows estimating this type of multi-dimensional skills. One option is to keep one skill variable per player, that we include in all games, and one skill variable per ground, that we add as their teammate depending on the type of game.\nplayers = Set(vcat((composition...)...)) priors = Dict([(p, Player(Gaussian(0., 1.6), 1.0, 0.036) ) for p in players]) composition_ground = [ r.double == \u0026quot;t\u0026quot; ? [[r.w1_id, r.w1_id*r.ground, r.w2_id, r.w2_id*r.ground],[r.l1_id, r.l1_id*r.ground, r.l2_id, r.l2_id*r.ground]] : [[r.w1_id, r.w1_id*r.ground],[r.l1_id, r.l1_id*r.ground]] for r in eachrow(data) ] h_ground = History(composition = composition_ground, times = dates, sigma = 1.0, gamma = 0.01, beta = 0.0, priors = priors) convergence(h_ground, epsilon = 0.01, iterations=10)  In this example we keep the same prior as before for the players, this time defined in the variable priors. In this way, the values chosen to initialize the class History will only be used for the ground skill factors. For those factors we chose a null beta so as not to add more noise to the players\u0026rsquo; performance, keeping the scale of the estimates stable.\nIn the following figures we show the skill difference that Nadal and Djokovic have in each of the three types of ground.\nWe can see that Nadal has a big skill difference between grounds, unlike Djokovic who has very similar skills on all three types of ground. The Nadal\u0026rsquo;s skill difference between clay and grass gorunds is greater than one ponit, which means at least 76% difference in probability of winning compared to itself.\nTo assess whether the complexity added by modeling multidimensionality is appropriate in general terms, we can compare the joint priori prediction of the models, calling the method \\texttt{log_evidence()} of the class \\texttt{History}.\nEstructure  src/TrueSkill.jl: Main file test/runrests.jl: Unit test  Inside test/ and example/ you will find a makefile. In each folder you can execute the entire procedure by typing make in the terminal.\n","date":1582848000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582848000,"objectID":"7ffb07b922501c04267f5edd1aa4bf58","permalink":"https://glandfried.github.io/publication/landfried2020-ttt/","publishdate":"2020-02-28T00:00:00Z","relpermalink":"/publication/landfried2020-ttt/","section":"publication","summary":"Packages:\n Julia Package: https://github.com/glandfried/TrueSkillThroughTime.jl Python Package: https://github.com/glandfried/TrueSkillThroughTime.py R package: https://github.com/glandfried/TrueSkillThroughTime.R  Full scientific documentation:\n English. Last version 2021-07-26 Español. Última versión 2021-07-26  TrueSkillThroughTime.jl None of the commonly used skill estimators, such as TrueSkill, Glicko and Item-Response Theory, correctly models the temporal aspect, which prevents having both good initial estimates and comparability between estimates separated in time and space.\nTrueSkill Through Time corrects those biases by modeling the entire history of activities using a single Bayesian network.","tags":null,"title":"TrueSkill Through Time. The Julia, Python and R packages","type":"publication"},{"authors":["Gustavo Landfried"],"categories":[],"content":" It was considered an established truth that cooperation required some kind of altruistic behavior to evolve. Indeed, one of the most important theorists of the evolution of cooperation, Martin Nowak, analyzed in one of the most prestigious scientific journals, Nature, a set of relevant rules for the evolution of cooperation. All the rules summarized a benefit-to-cost ratio of an altruistic act with respect to some critical value. At the end of the paper, he claimed that the most remarkable aspect of evolution is its ability to generate cooperation in a competitive world. We will see that his surprise can only arise if we are implicitly assuming that evolutionary systems are ergodic. If you don\u0026rsquo;t know what ergodic mean, read on.\nEvolutionary processes are essentially temporary processes. In evolutionary theory everyone is taught the fact that lineage growth is a multiplicative and noisy process: a sequence of survival and reproductive probabilities. In the field, we make use of mathematics to analyze what happens to a genetic or cultural lineage over time. For this purpose we represent the real environment through a stochastic function. For example, consider the following toy environment. Nature tosses a coin. For heads your community grows 50% of its current size. For tails your community lose 40% of its members.\ndef environment(size): if np.random.random() \u0026lt;= 0.5: res = 1.5*size else: res = 0.6*size return res  The question, now, is how to analyze the stochastic function in order to find the expected outcome, i.e. what will happen to agents typically. The development of probability theory was motivated by this purpose.\nThe original treatment (Pascal-Fermat-Huygens) states that the expected outcome can be found by multiplying each possible change in size by its probability of occurrence, and add everything. Let $\\Delta(s)$ be the change in size at state $s$ and $p(s)$ the probability of state $s$, then the expected outcome will be:\n$$\\text{expected outcome} = \\sum_s p(s)\\Delta(s)$$\nIf we analyze the toy environment, we will find that the expected outcome will have a positive change, $0.05\\Delta = 0.5 \\times 0.5\\Delta + 0.5 \\times (-0.4)\\Delta$. However, even if we consider members as a continuous variable, what really happens over time is very different from what is expected.\nThe expectation over states does not reflect what really happens with the individual agents over time. This is because we are facing a multiplicative process (Yaarin 2010). In the multiplicative process the real physical impacts of losses are often stronger than those of gains. If there is even one zero in the sequence of generations, we are extinct. Comparing what happens over time to what happens in expectation is a well-known problem in statistical mechanics, called \u0026ldquo;the ergodicity problem\u0026rdquo;. A system is ergodic if its time average equals its expectation value.\nOne consequence is that variance in fitness realy matters. An effective way to reduce variance is to cooperate, by sharing members between communities. The anthropologist Claude Lévi-Strauss developed a general argument for the universality of the incest taboo in human societies. His argument begins with the claim that the incest taboo is in effect a prohibition against endogamy, and the effect is to encourage exogamy. Through exogamy, otherwise unrelated households or lineages will form relationships through marriage, thus strengthening social solidarity.\nTo experiment the effect of this kind of rules, we define a toy incest taboo rule, in which a percentage of the community must migrate to other unrelated housholds.\ndef incest_rule(communities_size,exogamy=0.05): res = [] migration_per_community = exogamy*sum(communities_size)/len(communities_size) for c in range(len(communities_size)): res.append( communities_size[c]*(1-exogamy) + migration_per_community ) return res  If the previous communities, in the same environment, applied a 5% of exogamy we would observe the following behavior.\nMultiplicative process offers a concrete physical advantage in favor of cooperative behavior. The \u0026ldquo;ergodic\u0026rdquo; point of view had major implications for all evolutionary science. Perhaps the most significant change lies in the nature of the model human that arises from our conceptual reframing (Peters 2019). Observed behaviour deviates starkly from the predictions made by the Homo economicus model. Paired with a firm belief in its models, this has led to a narrative of human irrationality in large parts of economics. If humans evolved in non-ergodic environments they should be able to intuitively evaluate and adapt to the temporal consequences of the different scenarios, as the Copenhagen experiment seems to have shown (Meder 2019). The new \u0026ldquo;Homo ergodicus\u0026rdquo; model is a better fit to human behavior, who tends to care about others, understands that cooperation leads to better results, and is patient and kind.\nReferences  Nowak, M. 2006. Five rules for the evolution of cooperation. Nature. Peters, O. 2019. The ergodicity problem in economics. Nature. Yaarin, G. 2010. Cooperation evolution in random multiplicative environments. The European Physical Journal B. Meder, D. et al. 2019. Ergodicity-breaking reveals time optimal economic behavior in humans (v2). ArXiv.  ","date":1581292800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581292800,"objectID":"3b70d47569d36f7b5f908fea45690e6e","permalink":"https://glandfried.github.io/post/homoergodicus/","publishdate":"2020-02-10T00:00:00Z","relpermalink":"/post/homoergodicus/","section":"post","summary":"The ergodicity problem in evolutionary theory","tags":[],"title":"Homo ergodicus","type":"post"},{"authors":null,"categories":null,"content":"","date":1579046400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579046400,"objectID":"e0de91040edf6df5a21c56715e69cb7d","permalink":"https://glandfried.github.io/project/culturalevolution/","publishdate":"2020-01-15T00:00:00Z","relpermalink":"/project/culturalevolution/","section":"project","summary":"Societies as distributed information processing systems","tags":null,"title":"Cultural evolution","type":"project"},{"authors":[],"categories":null,"content":"","date":1575547200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575547200,"objectID":"67d045ea7c2650678c3f2f6673cf53a0","permalink":"https://glandfried.github.io/talk/2019_12_tacc/","publishdate":"2020-01-15T00:00:00Z","relpermalink":"/talk/2019_12_tacc/","section":"talk","summary":"Estimación de habilidad en la industria del video juego","tags":[],"title":"Técnicas para calcular distribuciones de creencias","type":"talk"},{"authors":null,"categories":null,"content":"","date":1559347200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559347200,"objectID":"a103b08ceeb83969f0f02279a9a065e3","permalink":"https://glandfried.github.io/courses/exactasprograma/","publishdate":"2019-06-01T00:00:00Z","relpermalink":"/courses/exactasprograma/","section":"courses","summary":"","tags":null,"title":"Faculty of science computer programming workshop (with Python)","type":"courses"},{"authors":["Gustavo Landfried"],"categories":null,"content":" Workshop In the workshop, tools for complex systems applied to social systems were presented. It was organized under a theoretical-practical modality and seminars of invited professors. The objective was to create a space for the encounter between the social sciences and the rest of the scientific disciplines. It was a great opportunity to exchange ideas on how to apply the tools used for complex systems to problems coming from the social area.\n","date":1557489600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557489600,"objectID":"dec491d2dc010926c6f09535cd8927a8","permalink":"https://glandfried.github.io/talk/2019_05_10_ic/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/2019_05_10_ic/","section":"talk","summary":"Bayesian inference tools applied to study how we learn.","tags":[],"title":"Social learning in cultural evolution contexts","type":"talk"},{"authors":[],"categories":null,"content":"","date":1556884800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556884800,"objectID":"93b3748cc6b5029f7d9cdcc385d59fd2","permalink":"https://glandfried.github.io/talk/2019_05_03_liaa/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/2019_05_03_liaa/","section":"talk","summary":"The hacked belief approach, and the Bayesian inference to the rescue.","tags":[],"title":"Evidence in favor of a scientific theory","type":"talk"},{"authors":null,"categories":null,"content":"","date":1551398400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551398400,"objectID":"eacbc8d30585481ddfffd611abbe7b7b","permalink":"https://glandfried.github.io/courses/algo1/","publishdate":"2019-03-01T00:00:00Z","relpermalink":"/courses/algo1/","section":"courses","summary":"","tags":null,"title":"Algorithms and data structure 1 (with C++)","type":"courses"},{"authors":["Gustavo Landfried","Diego Fernandez Slezak","Esteban Mocskos"],"categories":null,"content":"Supplementary material: TrueSkill: Technical Report.\n","date":1551398400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551398400,"objectID":"a82c894a2c318241e7db1db44fdf3f13","permalink":"https://glandfried.github.io/publication/landfried2019-faithfulness/","publishdate":"2019-03-01T00:00:00Z","relpermalink":"/publication/landfried2019-faithfulness/","section":"publication","summary":"Playing as a team with same partners enable us to acquire individual skills that would hardly be achieved by playing alone.","tags":["Source Themes"],"title":"Faithfulness-boost effect","type":"publication"},{"authors":["Gustavo Landfried"],"categories":null,"content":"The first skill estimator was developed by Arpad Elo, adopted by the World Chess Federations around 1970. TrueSkill is just the bayesian multiplayer version of Elo model, published by Microsoft in 2007. In this technical report I derive, step by step, the analytical solution of the model.\n","date":1551312000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551312000,"objectID":"18a0e2d9b613301c7bf7dfc328f701a1","permalink":"https://glandfried.github.io/publication/landfried2019-trueskill/","publishdate":"2019-02-28T00:00:00Z","relpermalink":"/publication/landfried2019-trueskill/","section":"publication","summary":"The first skill estimator was developed by Arpad Elo, adopted by the World Chess Federations around 1970. TrueSkill is just the bayesian multiplayer version of Elo model, published by Microsoft in 2007. In this technical report I derive, step by step, the analytical solution of the model.","tags":null,"title":"TrueSkill, Technical Report","type":"publication"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://glandfried.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":" Link to course  All the material for the course (here)  Bibliography  An Introduction to Statistical Learning with Applications in R (Oficial web page)  ","date":1538352000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543622400,"objectID":"27169defa2dbd5a4f852310ec0238e40","permalink":"https://glandfried.github.io/courses/csc/","publishdate":"2018-10-01T00:00:00Z","relpermalink":"/courses/csc/","section":"courses","summary":" Link to course  All the material for the course (here)  Bibliography  An Introduction to Statistical Learning with Applications in R (Oficial web page)  ","tags":null,"title":"Computational Social Science (with R)","type":"courses"},{"authors":null,"categories":null,"content":"","date":1535760000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543968000,"objectID":"db4426e1541e334dbaddf827aa1f9046","permalink":"https://glandfried.github.io/courses/intro/","publishdate":"2018-09-01T00:00:00Z","relpermalink":"/courses/intro/","section":"courses","summary":"","tags":null,"title":"Computer Science introduction for empricial sciences (with Python)","type":"courses"},{"authors":null,"categories":null,"content":" Beyond any debate, what is certain is that Bayesian Inference allows us to optimally update our beliefs given a model and a data set. What more could you ask for?\nProjects  Bayesian Skill Estimator (Technical report) A general implementation of the TrueSkill rating system for Python (Software) Bayesian inference course (Github)  We work with variations of this Bayesian skill estimator\n","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"ffa45d25fd03d59d874a086e2db703e7","permalink":"https://glandfried.github.io/project/bayesianinference/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/project/bayesianinference/","section":"project","summary":"The method that optimally update our beliefs given a model and evidence.","tags":null,"title":"Bayesian Inference","type":"project"},{"authors":null,"categories":null,"content":" Hands-on  Problemas de combinatoria y recursión en la predicción de alianza  ","date":1454284800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496275200,"objectID":"412866672adf095019b6c22af0705a1b","permalink":"https://glandfried.github.io/courses/algebra/","publishdate":"2016-02-01T00:00:00Z","relpermalink":"/courses/algebra/","section":"courses","summary":" Hands-on  Problemas de combinatoria y recursión en la predicción de alianza  ","tags":null,"title":"Algebra (with Haskell)","type":"courses"},{"authors":null,"categories":null,"content":"","date":1264982400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1278288000,"objectID":"31ecd35e40dd1a33c4da10a3e539d910","permalink":"https://glandfried.github.io/courses/artificialsocieties/","publishdate":"2010-02-01T00:00:00Z","relpermalink":"/courses/artificialsocieties/","section":"courses","summary":"","tags":null,"title":"Artificial societies and ethnography (with Netlogo)","type":"courses"}]